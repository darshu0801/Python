import time
import subprocess
import re

def get_smart_temperature():
    try:
        # Run the smartctl command to get SMART data
        result = subprocess.run(['smartctl', '-a', 'YOUR_DEVICE_PATH'], capture_output=True, text=True)
        
        # Check if the command was successful
        if result.returncode != 0:
            print(f"smartctl failed: {result.stderr}")
            return None
        
        # Extract the temperature data using regex
        temp_match = re.search(r'Temperature_Celsius.*?(\d+)', result.stdout)
        if temp_match:
            temperature = int(temp_match.group(1))
            return temperature
        else:
            print("Temperature data not found.")
            return None
    except Exception as e:
        print(f"An error occurred: {e}")
        return None

def monitor_temperature(interval=1):
    while True:
        temperature = get_smart_temperature()
        if temperature is not None:
            print(f"Temperature: {temperature}°C")
        time.sleep(interval)

if __name__ == "__main__":
    monitor_temperature()








import time
import subprocess
import re
from openpyxl import Workbook
from openpyxl.utils import get_column_letter

def get_smart_temperature():
    try:
        # Run the smartctl command to get SMART data
        result = subprocess.run(['smartctl', '-a', 'YOUR_DEVICE_PATH'], capture_output=True, text=True)
        
        # Check if the command was successful
        if result.returncode != 0:
            print(f"smartctl failed: {result.stderr}")
            return None
        
        # Extract the temperature data using regex
        temp_match = re.search(r'Temperature_Celsius.*?(\d+)', result.stdout)
        if temp_match:
            temperature = int(temp_match.group(1))
            return temperature
        else:
            print("Temperature data not found.")
            return None
    except Exception as e:
        print(f"An error occurred: {e}")
        return None

def monitor_temperature(interval=1):
    # Create a new Excel workbook and select the active sheet
    wb = Workbook()
    ws = wb.active
    ws.title = "Temperature Log"
    
    # Write the headers
    ws.append(["Timestamp", "Temperature (°C)"])
    
    row = 2  # Start writing data from the second row
    while True:
        temperature = get_smart_temperature()
        if temperature is not None:
            # Get the current timestamp
            timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
            
            # Append the timestamp and temperature to the worksheet
            ws.append([timestamp, temperature])
            print(f"{timestamp} - Temperature: {temperature}°C")
            
            # Save the workbook every time a new value is added
            wb.save("temperature_log.xlsx")
        
        time.sleep(interval)

if __name__ == "__main__":
    monitor_temperature()